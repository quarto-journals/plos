---
title: "Demo aft format to use as template"
format:
  aft-pdf:
    keep-tex: true  
  aft-html: default
author:
  - name: John Doe
    affiliations:
      - name: Dummy org
        department: Cool Dep
        address: Somewhere
        city: Magic city
        country: best one
        postal-code: 9999
      - Demo Journal
    orcid: 0000-0000-0000-0000
    email: JD@example.org
    url: https://example.org/
  - name: his friend
    affiliations:
      - Another Affiliation
abstract: |
  This document is only a demo explaining how to use the template.
keywords: [template, demo]
bibliography: bibliography.bib  
---

## Introduction {#sec-intro}

::: callout-important
This is a dummy example only for the purpose to use this repo as a template starter for creating new formats.  For this `article-format-template` we call our dummy article `aft`. 
:::

This quarto extension format supports PDF and HTML outputs. `quarto-journals` is aiming at porting existing {{< latex >}} template from journals to be used with quarto. PDF format is what require the most work to fit the journals guideline, but Quarto offer a nice rendering for HTML output too. This demo format template only use basic HTML format without any customization for now.

Everything for the extensions is in `_extensions/quarto-journals/aft` folder. See Quarto doc for details. 

- In `partials`, you'll find the `.tex` partials that can be used and should be removed or tweaked,s

- Your extension can make shortcodes and lua filters available. This document shows the effect of the one provided in the `aft` format. See Lua filter in `extensions/quarto-journals/aft`

- `aft` format sets some defaults which are different from `pdf` or `html`, link setting links to URL in read inside PDF output. See `_extensions/quarto-journals/aft/_extension.yml`

Source repository for this template format can found on [Github](https://github.com/quarto-journals/article-format-template)


## Shortcode demo {#sec-shortcode}

PDF are rendered using {{< latex >}} but it is best if one can use a Markdown syntax for cross format support.

::: callout-tip
`{{< latex >}}` is a shortcode syntax where the shortcode is included in the extensions `_extensions\quarto-journals`
:::

## Code chunk {#sec-chunks}

This format hide chunks by default.

```{r}
#| prompt: true
# Loading some data but this chunk won't be shown.
data("quine", package = "MASS")
```

But you can set `echo` option to `true`

```{r}
#| echo: true
m_pois <- glm(Days ~ (Eth + Sex + Age + Lrn)^2, data = quine, family = poisson)
summary(m_pois)
```

## Text color {#sec-summary}

:::{.callout-tip}
Our format makes applying color on inline text possibly using the `[content]{color=<name>}` syntax. Let's see an example.
:::

Here we are using a special feature of our format which is the coloring because [pink is a **nice** color]{color=mypink}.

## Using references {.unnumbered}

I did not read this book [@CameronTrivedi2013] but it must be interesting 

## References {.unnumbered}

:::{#refs}

:::